/*
Program Name: ch3no12.cpp
Author: J Dooley
Date: June 26, 2017
Synopsis: Write a program that inputs a date (eg, July 4, 2008) and outputs the day of the week that corresponds 
to that date.  
*/

#include <iostream>
using namespace std;

/* function prototypes */
bool isLeapYear(int);
int getCenturyValue(int);
int getYearValue(int);
int getMonthValue(int, int);
int computeDayOfWeek(int, int, int, int);

int main ()
{

int year = 0;
int month = 0;
int day = 0;
bool leapYearFlag = 0;
int cValue = 0;
int yValue = 0;
int mValue = 0;

cout << "Enter a month (1 through 12 only) ";
cin >> month;

cout << "Enter a day (1 through 31 only) ";
cin >> day;

cout << "Enter a year (four digits) ";
cin >> year;

cValue = getCenturyValue(year);
yValue = getYearValue(year);
mValue = getMonthValue(month, year);
computeDayOfWeek(cValue, mValue, yValue, day);

return 0;
}

bool isLeapYear(int year){
	bool itsLeapYear = 0;
	if (year%400 == 0)
		itsLeapYear = 1;
	else
		if ((year%4 == 0) && (year%100 != 0))
			itsLeapYear = 1;
	return itsLeapYear;
}

int getCenturyValue(int year){
	int cValue = 0;
	/* divide four digit year by 100 to get first two digits of it */
	cValue = year/100;
	/* cout << " year div by 100 cValue is " << cValue << "\n"; */
	
	/* divide those first two digits by 4 and keep the remainder */
	cValue = cValue % 4;
	/* cout << "div first two digits by 4 and keep remainder cValue is " << cValue << "\n";*/

	/* subtract the remainder from 3 */
	cValue = 3 - cValue;
	/* cout << "3 minus cValue is " << cValue << "\n"; */

	/* multiply that by 2 and return this value */
	cValue = cValue *2;
	/* cout << "mult by 2 cValue is " << cValue << "\n"; */
	
	return cValue;

}

int getYearValue(int year){
	int yValue = 0;
	int dividend = 0;
	/* div four digit year by 100 and keep the remainder */
	yValue = year % 100;
	/* cout << "year div by 100 keep remainder to get the last two digits of it " << yValue << "\n"; */

	/* div by 4 and discard remainder */
	dividend = yValue / 4;
	/* cout << "div by 4 discard remainder " << dividend << "\n"; */

	/* add yValue and dividend together and return this value */
	yValue = yValue + dividend;
	/* cout << "returning this for yValue " << yValue << "\n"; */

	return yValue;
}

int getMonthValue(int month, int year){
	bool leapYearFlag = 0;
	int mValue = 0;
	switch (month)
	{
		case 1:
			/* cout << "January"; */
			mValue = 0;
			break;
 		case 2:
			/* cout << "February"; */
			mValue = 3;
			break;
		case 3:
                        /* cout << "March"; */
                        mValue = 3;
                        break;
                case 4:
                        /* cout << "April"; */
                        mValue = 6;
                        break;
		case 5:
                        /* cout << "May"; */
                        mValue = 1;
                        break;
                case 6:
                        /* cout << "June"; */
                        mValue = 4;
                        break;
                case 7:
                        /* cout << "July"; */
                        mValue = 6;
                        break;
                case 8:
                        /* cout << "August"; */
                        mValue = 2;
                        break;
		case 9:
                        /* cout << "September"; */
                        mValue = 5;
                        break;
                case 10:
                        /* cout << "October"; */
                        mValue = 0;
                        break;
                case 11:
                        /* cout << "November"; */ 
                        mValue = 3;
                        break;
                case 12:
                        /* cout << "December"; */
                        mValue = 5;
                        break;
		default:
			cout << "Unknown month!!";
	}

	leapYearFlag = isLeapYear(year);
	/* cout << "Inside getMonthValue Leap Year Flag is set to " << leapYearFlag << "\n"; */

	if (leapYearFlag == 1) 
		if (month == 1)
			mValue = 6;
		else if (month == 2)
				mValue = 1;
		

	/* cout << "mValue is returned as this " << mValue << "\n"; */
	return mValue;
}

int computeDayOfWeek(int cValue, int mValue, int yValue, int day){
	int dayOfWeek = 0;
	dayOfWeek = (mValue + cValue + yValue + day) % 7;
	switch (dayOfWeek)
	{
		case 0:
			cout << "That's a Sunday.\n";
			break;
		case 1:
			cout << "That's a Monday.\n";
			break;
		case 2:
			cout << "That's a Tuesday.\n";
			break;
		case 3:
                        cout << "That's a Wednesday.\n";
                        break;
                case 4:
                        cout << "That's a Thursday.\n";
                        break;
                case 5:
                        cout << "That's a Friday.\n";
                        break;
		case 6:
                        cout << "That's a Saturday.\n";
                        break;
                default:
                        cout << "Unknown day!!\n";
         }
	return 0;
} 

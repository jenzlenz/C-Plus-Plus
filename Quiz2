/*
Program Name: Quiz2.cpp
Author: J Dooley
Date: July 27, 2017
Synopsis:
Write a program that declares and initializes a character string to read as follows:
char array[ ] = “To be or not to be, that is the question…..”

Program should contain a function, char* str_char(char *array_ptr, char c),
which outputs the memory location of the first occurrence of the letter ‘q’. 

Program should contain a function int char_count(char *array_ptr, char o) which counts how many times a particular
letter, ‘o’, appears in string.  
If the
letter is not found it returns zero.
*/

#include <iostream>
#include <cstring>
#include <string.h>
using namespace std;

char* str_char(char *array_ptr, char letter);
int char_count(char *array_ptr, char letter);

int main()
{
char array[] = "To be or not to be, that is the question";
char *array_ptr = &array[0];
int letterCount = 0;

char letter = 'q';
array_ptr = str_char(array_ptr, letter);
//The function str_char returned the char pointer, which is the value the pointer is at i.e 'q'
// but the question was to return the address so need to cout << &array_ptr
cout << "The first occurence of the letter q in the array is at this memory address " << &array_ptr << endl;

array_ptr = &array[0];  
//reset the pointer to the beginning of the array

letter = 'o';
letterCount = char_count(array_ptr, letter);
cout << "There are " << letterCount << " " << letter << "\'s in the array." << endl;

return 0;
}
/////////////////////////////////////////////////////////////////////////////////////////////
char* str_char(char *array_ptr, char letter)
{	
    while ((*array_ptr != '\0') && (*array_ptr != 'q')) 
    {    
      if (*array_ptr != 'q')
      {
        ++array_ptr;
      }
      else
      {
       //*array_ptr is equal to q so end while loop and end function by returning the char*
	 return array_ptr; 
      }  
    }    
}

int char_count(char *array_ptr, char letter)
{
  // modified the function to take the value of the variable letter instead of using 'o'
  int letterCount = 0;
  while (*array_ptr != '\0') {
    if (*array_ptr == letter)
        ++letterCount;
     ++array_ptr;
  }
  
  return letterCount; 
}
